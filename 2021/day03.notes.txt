00100
11110
10110
10111
10101
01111
00111
11100
10000
11001
00010
01010

During Round 1
Count all 0s and 1s of the first position of every line
0s.length = 5
1s.length = 7
0s.length > 1s.length ? take all lines with 0s, else take all lines with 1s
so => take lines with 1s

After Round 1
11110
10110
10111
10101
11100
10000
11001

During Round 2
Count all 0s and 1s of SECOND position of every remaining line
0s.length = 4
1s.length = 3
0s.l > 1s.l ? take 0s : take 1s
so => take 0s

After Round 2
10110
10111
10101
10000

During Round 3
Count all 0s and 1s of THIRD position of every remaining line
0s.l = 1
1s.l = 3
so => take 1s

After Round 3
10110
10111
10101

During Round 4
Count 0s and 1s of FOURTH pos of every remaining line
0s = 1
1s = 2
so => take 1s

After Round 4
10110
10111

During Round 5
0s and 1s of FIFTH pos of every remaining line
0s = 1
1s = 1
equal, so => take 1s (as we are finding oxygen gen rating, else take 0s)

After Round 5
10111 => bin to dec => 23 is result of oxygen gen rating

Further notes
The amount of rounds is either based on the length of the array? ... or it's infinite until one number is left over

000
001
010
011
100
101
110
111
000
001
010
011
100
101
110
111
000
001
010
011
100
101
110
111

r1
100
101
110
111
100
101
110
111
100
101
110
111

r2
110
111
110
111
110
111

r3
111
111
111

r4???




